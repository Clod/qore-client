// Mocks generated by Mockito 5.4.2 from annotations
// in cardio_gut/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cardio_gut/assets/global_data.dart' as _i5;
import 'package:cardio_gut/model/paciente.dart' as _i2;
import 'package:cardio_gut/model/patients_dao_ws.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [Paciente].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaciente extends _i1.Mock implements _i2.Paciente {
  MockPaciente() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id => (super.noSuchMethod(
        Invocation.getter(#id),
        returnValue: 0,
      ) as int);
  @override
  String get nombre => (super.noSuchMethod(
        Invocation.getter(#nombre),
        returnValue: '',
      ) as String);
  @override
  set nombre(String? _nombre) => super.noSuchMethod(
        Invocation.setter(
          #nombre,
          _nombre,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get apellido => (super.noSuchMethod(
        Invocation.getter(#apellido),
        returnValue: '',
      ) as String);
  @override
  set apellido(String? _apellido) => super.noSuchMethod(
        Invocation.setter(
          #apellido,
          _apellido,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set documento(String? _documento) => super.noSuchMethod(
        Invocation.setter(
          #documento,
          _documento,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set pais(String? _pais) => super.noSuchMethod(
        Invocation.setter(
          #pais,
          _pais,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set fechaNacimiento(String? _fechaNacimiento) => super.noSuchMethod(
        Invocation.setter(
          #fechaNacimiento,
          _fechaNacimiento,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get fechaCreacionFicha => (super.noSuchMethod(
        Invocation.getter(#fechaCreacionFicha),
        returnValue: '',
      ) as String);
  @override
  set fechaCreacionFicha(String? _fechaCreacionFicha) => super.noSuchMethod(
        Invocation.setter(
          #fechaCreacionFicha,
          _fechaCreacionFicha,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set sexo(String? _sexo) => super.noSuchMethod(
        Invocation.setter(
          #sexo,
          _sexo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set diagnosticoPrenatal(String? _diagnosticoPrenatal) => super.noSuchMethod(
        Invocation.setter(
          #diagnosticoPrenatal,
          _diagnosticoPrenatal,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set pacienteFallecido(String? _pacienteFallecido) => super.noSuchMethod(
        Invocation.setter(
          #pacienteFallecido,
          _pacienteFallecido,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set semanasGestacion(int? _semanasGestacion) => super.noSuchMethod(
        Invocation.setter(
          #semanasGestacion,
          _semanasGestacion,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set diag1(String? _diag1) => super.noSuchMethod(
        Invocation.setter(
          #diag1,
          _diag1,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set diag2(String? _diag2) => super.noSuchMethod(
        Invocation.setter(
          #diag2,
          _diag2,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set diag3(String? _diag3) => super.noSuchMethod(
        Invocation.setter(
          #diag3,
          _diag3,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set diag4(String? _diag4) => super.noSuchMethod(
        Invocation.setter(
          #diag4,
          _diag4,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set fechaPrimerDiagnostico(String? _fechaPrimerDiagnostico) =>
      super.noSuchMethod(
        Invocation.setter(
          #fechaPrimerDiagnostico,
          _fechaPrimerDiagnostico,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nroHistClinicaPapel(String? _nroHistClinicaPapel) => super.noSuchMethod(
        Invocation.setter(
          #nroHistClinicaPapel,
          _nroHistClinicaPapel,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set nroFichaDiagPrenatal(String? _nroFichaDiagPrenatal) => super.noSuchMethod(
        Invocation.setter(
          #nroFichaDiagPrenatal,
          _nroFichaDiagPrenatal,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set comentarios(String? _comentarios) => super.noSuchMethod(
        Invocation.setter(
          #comentarios,
          _comentarios,
        ),
        returnValueForMissingStub: null,
      );
  @override
  Map<String, dynamic> toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: <String, dynamic>{},
      ) as Map<String, dynamic>);
}

/// A class which mocks [Transceiver].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransceiver extends _i1.Mock implements _i3.Transceiver {
  MockTransceiver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<List<int>> get responseStream => (super.noSuchMethod(
        Invocation.getter(#responseStream),
        returnValue: _i4.Stream<List<int>>.empty(),
      ) as _i4.Stream<List<int>>);
  @override
  void sendMessage({
    required _i5.Commands? command,
    required String? data,
    List<String>? params,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #command: command,
            #data: data,
            #params: params,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
